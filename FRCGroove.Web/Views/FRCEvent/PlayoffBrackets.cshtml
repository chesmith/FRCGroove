@using FRCGroove.Lib.models
@using FRCGroove.Web.Models
@model FRCGroove.Web.Models.Dashboard

<div>
    @{
        List<Match> playoffs = Model.Matches.Where(m => m.tournamentLevel == "Playoff" && m.title.EndsWith("1")).ToList();
        Dictionary<int, string> teamClasses = new Dictionary<int, string>();
        foreach (Match playoff in playoffs)
        {
            foreach (Team team in playoff.teams)
            {
                if (Model.TeamsOfInterest.Count(t => t.number == team.number) > 0)
                {
                    teamClasses[team.number] = "teamOfInterest";
                }
                else { teamClasses[team.number] = string.Empty; }
            }
        }

        <table style="width: 100%">
            <tr><td colspan="10"><a name="Brackets"></a><div class="followMeBar">Brackets</div></td></tr>
            <tr>
                <td width="16%" style="border-right:none; color:red">
                    @Html.Raw(Model.Alliances.Where(t => t.number == Model.Bracket.brackets["qf1-red"]).FirstOrDefault().teams.Select(t => "<div class=\"" + teamClasses[t.number] + "\">&nbsp;" + t.number.ToString("#") + "</div>").Aggregate((html, cell) => html + cell))
                </td>
                <td style="border-left:none">
                    @if (Model.Bracket.brackets["sf1-red"] != 0 && Model.Bracket.brackets["sf1-red"] == Model.Bracket.brackets["qf1-red"])
                    {<div class="arrow_right"></div>}
                </td>

                <td rowspan="2" width="16%" style="border-right:none; color:red">
                    @if (Model.Bracket.brackets["sf1-red"] != 0)
                    {@Html.Raw(Model.Alliances.Where(t => t.number == Model.Bracket.brackets["sf1-red"]).FirstOrDefault().teams.Select(t => "<div class=\"" + teamClasses[t.number] + "\">&nbsp;" + t.number.ToString("#") + "</div>").Aggregate((html, cell) => html + cell));
                }
                </td>
                <td rowspan="2" style="border-left:none">
                    @if (Model.Bracket.brackets["f-red"] != 0 && Model.Bracket.brackets["f-red"] == Model.Bracket.brackets["sf1-red"])
                    {<div class="arrow_right"></div>}
                </td>

                <td rowspan="4" width="16%" style="color:red">
                    @if (Model.Bracket.brackets["f-red"] != 0)
                    {@Html.Raw(Model.Alliances.Where(t => t.number == Model.Bracket.brackets["f-red"]).FirstOrDefault().teams.Select(t => "<div class=\"" + teamClasses[t.number] + "\">&nbsp;" + t.number.ToString("#") + "</div>").Aggregate((html, cell) => html + cell));
                }
                </td>

                <td rowspan="4" width="16%" style="color:blue">
                    @if (Model.Bracket.brackets["f-blue"] != 0)
                    {@Html.Raw(Model.Alliances.Where(t => t.number == Model.Bracket.brackets["f-blue"]).FirstOrDefault().teams.Select(t => "<div class=\"" + teamClasses[t.number] + "\">&nbsp;" + t.number.ToString("#") + "</div>").Aggregate((html, cell) => html + cell));
                }
                </td>

                <td rowspan="2" style="border-right:none">
                    @if (Model.Bracket.brackets["f-blue"] != 0 && Model.Bracket.brackets["f-blue"] == Model.Bracket.brackets["sf2-red"])
                    {<div class="arrow_left"></div>}
                </td>
                <td rowspan="2" width="16%" style="border-left:none; color:red">
                    @if (Model.Bracket.brackets["sf2-red"] != 0)
                    {@Html.Raw(Model.Alliances.Where(t => t.number == Model.Bracket.brackets["sf2-red"]).FirstOrDefault().teams.Select(t => "<div class=\"" + teamClasses[t.number] + "\">&nbsp;" + t.number.ToString("#") + "</div>").Aggregate((html, cell) => html + cell));
                }
                </td>

                <td style="border-right:none">
                    @if (Model.Bracket.brackets["sf2-red"] != 0 && Model.Bracket.brackets["sf2-red"] == Model.Bracket.brackets["qf3-red"])
                    {<div class="arrow_left"></div>}
                </td>
                <td width="16%" style="border-left:none; color:red">
                    @Html.Raw(Model.Alliances.Where(t => t.number == Model.Bracket.brackets["qf3-red"]).FirstOrDefault().teams.Select(t => "<div class=\"" + teamClasses[t.number] + "\">&nbsp;" + t.number.ToString("#") + "</div>").Aggregate((html, cell) => html + cell))
                </td>
            </tr>
            <tr>
                <td style="border-right:none; color:red">
                    @Html.Raw(Model.Alliances.Where(t => t.number == Model.Bracket.brackets["qf1-blue"]).FirstOrDefault().teams.Select(t => "<div class=\"" + teamClasses[t.number] + "\">&nbsp;" + t.number.ToString("#") + "</div>").Aggregate((html, cell) => html + cell))
                </td>
                <td style="border-left:none">
                    @if (Model.Bracket.brackets["sf1-red"] != 0 && Model.Bracket.brackets["sf1-red"] == Model.Bracket.brackets["qf1-blue"])
                    {<div class="arrow_right"></div>}
                </td>

                <td style="border-right:none">
                    @if (Model.Bracket.brackets["sf2-red"] != 0 && Model.Bracket.brackets["sf2-red"] == Model.Bracket.brackets["qf3-blue"])
                    {<div class="arrow_left"></div>}
                </td>
                <td style="border-left:none; color:blue">
                    @Html.Raw(Model.Alliances.Where(t => t.number == Model.Bracket.brackets["qf3-blue"]).FirstOrDefault().teams.Select(t => "<div class=\"" + teamClasses[t.number] + "\">&nbsp;" + t.number.ToString("#") + "</div>").Aggregate((html, cell) => html + cell))
                </td>
            </tr>
            <tr>
                <td style="border-right:none; color:red">
                    @Html.Raw(Model.Alliances.Where(t => t.number == Model.Bracket.brackets["qf2-red"]).FirstOrDefault().teams.Select(t => "<div class=\"" + teamClasses[t.number] + "\">&nbsp;" + t.number.ToString("#") + "</div>").Aggregate((html, cell) => html + cell))
                </td>
                <td style="border-left:none">
                    @if (Model.Bracket.brackets["sf1-blue"] != 0 && Model.Bracket.brackets["sf1-blue"] == Model.Bracket.brackets["qf2-red"])
                    {<div class="arrow_right"></div>}
                </td>

                <td rowspan="2" style="border-right:none; color:blue">
                    @if (Model.Bracket.brackets["sf1-blue"] != 0)
                    {@Html.Raw(Model.Alliances.Where(t => t.number == Model.Bracket.brackets["sf1-blue"]).FirstOrDefault().teams.Select(t => "<div class=\"" + teamClasses[t.number] + "\">&nbsp;" + t.number.ToString("#") + "</div>").Aggregate((html, cell) => html + cell));
                }
                </td>
                <td rowspan="2" style="border-left:none">
                    @if (Model.Bracket.brackets["f-red"] != 0 && Model.Bracket.brackets["f-red"] == Model.Bracket.brackets["sf1-blue"])
                    {<div class="arrow_right"></div>}
                </td>

                <td rowspan="2" style="border-right:none">
                    @if (Model.Bracket.brackets["f-blue"] != 0 && Model.Bracket.brackets["f-blue"] == Model.Bracket.brackets["sf2-blue"])
                    {<div class="arrow_left"></div>}
                </td>
                <td rowspan="2" style="border-left:none; color:blue">
                    @if (Model.Bracket.brackets["sf2-blue"] != 0)
                    {@Html.Raw(Model.Alliances.Where(t => t.number == Model.Bracket.brackets["sf2-blue"]).FirstOrDefault().teams.Select(t => "<div class=\"" + teamClasses[t.number] + "\">&nbsp;" + t.number.ToString("#") + "</div>").Aggregate((html, cell) => html + cell));
                }
                </td>

                <td style="border-right:none">
                    @if (Model.Bracket.brackets["sf2-blue"] != 0 && Model.Bracket.brackets["sf2-blue"] == Model.Bracket.brackets["qf4-red"])
                    {<div class="arrow_left"></div>}
                </td>
                <td style="border-left:none; color:red">
                    @Html.Raw(Model.Alliances.Where(t => t.number == Model.Bracket.brackets["qf4-red"]).FirstOrDefault().teams.Select(t => "<div class=\"" + teamClasses[t.number] + "\">&nbsp;" + t.number.ToString("#") + "</div>").Aggregate((html, cell) => html + cell))
                </td>
            </tr>
            <tr>
                <td style="border-right:none; color:blue">
                    @Html.Raw(Model.Alliances.Where(t => t.number == Model.Bracket.brackets["qf2-blue"]).FirstOrDefault().teams.Select(t => "<div class=\"" + teamClasses[t.number] + "\">&nbsp;" + t.number.ToString("#") + "</div>").Aggregate((html, cell) => html + cell))
                </td>
                <td style="border-left:none">
                    @if (Model.Bracket.brackets["sf1-blue"] != 0 && Model.Bracket.brackets["sf1-blue"] == Model.Bracket.brackets["qf2-blue"])
                    {<div class="arrow_right"></div>}
                </td>

                <td style="border-right:none">
                    @if (Model.Bracket.brackets["sf2-blue"] != 0 && Model.Bracket.brackets["sf2-blue"] == Model.Bracket.brackets["qf4-blue"])
                    {<div class="arrow_left"></div>}
                </td>
                <td style="border-left:none; color:blue">
                    @Html.Raw(Model.Alliances.Where(t => t.number == Model.Bracket.brackets["qf4-blue"]).FirstOrDefault().teams.Select(t => "<div class=\"" + teamClasses[t.number] + "\">&nbsp;" + t.number.ToString("#") + "</div>").Aggregate((html, cell) => html + cell))
                </td>
            </tr>
        </table>
    }
</div>