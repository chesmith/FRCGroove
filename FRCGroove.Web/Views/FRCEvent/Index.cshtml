@using FRCGroove.Lib.models
@model FRCGroove.Web.Models.Dashboard

@{
    ViewBag.Title = "FRC Groove";
}
<div style="font-size: large">DON'T USE</div>
<div>
    @if (Model != null)
    {
        ViewBag.Title += " - " + Model.FrcEvent.name;

        Boolean inFuture = false;
        Boolean inPlayoffs = false;

        <div style="font-weight:bold">@Model.FrcEvent.name</div>
        <div style="font-size:x-small">@Model.FrcEvent.dateStart.ToString("ddd M/d") to @Model.FrcEvent.dateEnd.ToString("ddd M/d")</div>
        <br />
        string aheadBehind = (Model.ScheduleOffset < 0) ? "ahead" : "behind";
        if (Model.EventState == FRCGroove.Web.Models.FRCEventState.Past)
        {
            <p>This event appears to be complete - <a href="#playoffs">jump to playoffs</a></p>
        }
        else if (Model.EventState == FRCGroove.Web.Models.FRCEventState.Future)
        {
            <p>This event hasn't yet started</p>
        }
        else
        {
            <p><i>Running about @Math.Round(Model.ScheduleOffset, 0) minutes @aheadBehind (<a href="#latest">next match</a>)</i></p>
            if (inPlayoffs)
            {
                <p>Playoffs have begun (<a href="#playoffs">go there now</a>)</p>
            }
        }

        foreach (RegisteredTeam registeredTeam in Model.Teams)
        {
            if (Model.EventState != FRCGroove.Web.Models.FRCEventState.Future)
            {
                <div>Team @registeredTeam.teamNumber @registeredTeam.nameShort (Event #@registeredTeam.eventRank / District #@registeredTeam.districtRank)</div>
                if (registeredTeam.Stats != null)
                {
                    <div style="font-size:x-small;">
                        OPR: @Math.Round(registeredTeam.Stats.oprs["frc" + registeredTeam.teamNumber.ToString()], 2),
                        DPR: @Math.Round(registeredTeam.Stats.dprs["frc" + registeredTeam.teamNumber.ToString()], 2),
                        CCWM: @Math.Round(registeredTeam.Stats.ccwms["frc" + registeredTeam.teamNumber.ToString()], 2)
                    </div>
                }
            }
            else
            {
                <div>Team @registeredTeam.teamNumber @registeredTeam.nameShort (District #@registeredTeam.districtRank)</div>
            }
            <br />
        }
        <table width="100%">
            @foreach (Match match in Model.Matches)
            {
                if (match.actualStartTime.Year == 1 && !inFuture)
                {
                    inFuture = true;
                    <tr><td colspan="5" style="height: 10px; background-color: black"><a name="latest"></a></td></tr>
                }
                else if (match.tournamentLevel == "Playoff" && !inPlayoffs)
                {
                    inPlayoffs = true;
                    <tr><td colspan="5" style="height: 3px; background-color: black"><a name="playoffs"></a></td></tr>
                }

                if (match.title == "Semifinal 1-1" || match.title == "Final 1")
                {
                    <tr><td colspan="5" style="height: 3px; background-color: black"></td></tr>
                }

                List<Team> redAlliance = match.teams.Where(t => t.station.StartsWith("Red")).ToList();
                List<Team> blueAlliance = match.teams.Where(t => t.station.StartsWith("Blue")).ToList();

                Dictionary<int, string> teamClasses = new Dictionary<int, string>();

                foreach (Team team in match.teams)
                {
                    if (Model.Teams.Where(t => t.teamNumber == team.teamNumber).Count() > 0)
                    {
                        if (team.station.StartsWith("Red"))
                        { teamClasses[team.teamNumber] = "teamOfInterest redInvert"; }
                        else
                        { teamClasses[team.teamNumber] = "teamOfInterest blueInvert"; }
                    }
                    else { teamClasses[team.teamNumber] = string.Empty; }

                    if (team.dq)
                    { teamClasses[team.teamNumber] += " disqualified"; }

                    if (team.surrogate)
                    { teamClasses[team.teamNumber] += " surrogate"; }
                }
                <tr>
                    <td style="text-align: center">
                        <div><a href="@match.matchDetailsUrl">@match.title</a></div>
                        <div style="font-size: x-small">
                            @match.startTime.ToString("ddd M/d h:mm")
                            @if (match.actualStartTime.Year > 1)
                            {
                                <span>(@match.actualStartTime.ToString("h:mm"))</span>
                            }
                            else if (Model.EventState != FRCGroove.Web.Models.FRCEventState.Future)
                            {
                                <span><i>(~@match.startTime.AddMinutes(Model.ScheduleOffset).ToString("h:mm"))</i></span>
                            }
                        </div>
                    </td>
                    <td class="red">
                        <div class="@teamClasses[redAlliance[0].teamNumber]">@redAlliance[0].teamNumber</div>
                        <div class="@teamClasses[redAlliance[1].teamNumber]">@redAlliance[1].teamNumber</div>
                        <div class="@teamClasses[redAlliance[2].teamNumber]">@redAlliance[2].teamNumber</div>
                    </td>
                    @{
                        string scoreRed = string.Empty;
                        string scoreBlue = string.Empty;
                        if (match.actualStartTime.Year > 1)
                        {
                            scoreRed = match.scoreRedFinal.ToString();
                            scoreBlue = match.scoreBlueFinal.ToString();
                        }
                        string scoreWin = "Invert scoreWin";
                    }
                    <td class="@((match.scoreRedFinal > match.scoreBlueFinal) ? "red" + scoreWin : "red")">@scoreRed</td>
                    <td class="@((match.scoreRedFinal < match.scoreBlueFinal) ? "blue" + scoreWin : "blue")">@scoreBlue</td>
                    <td class="blue">
                        <div class="@teamClasses[blueAlliance[0].teamNumber]">@blueAlliance[0].teamNumber</div>
                        <div class="@teamClasses[blueAlliance[1].teamNumber]">@blueAlliance[1].teamNumber</div>
                        <div class="@teamClasses[blueAlliance[2].teamNumber]">@blueAlliance[2].teamNumber</div>
                    </td>
                </tr>
            }
        </table>
        if (inPlayoffs)
        {
            List<Match> playoffs = Model.Matches.Where(m => m.title.EndsWith("1")).ToList();
            Dictionary<int, string> teamClasses = new Dictionary<int, string>();
            foreach (Match playoff in playoffs)
            {
                foreach (Team team in playoff.teams)
                {
                    if (Model.Teams.Where(t => t.teamNumber == team.teamNumber).Count() > 0)
                    {
                        teamClasses[team.teamNumber] = "teamOfInterest";
                    }
                    else { teamClasses[team.teamNumber] = string.Empty; }

                    if (team.dq)
                    { teamClasses[team.teamNumber] += " disqualified"; }

                    if (team.surrogate)
                    { teamClasses[team.teamNumber] += " surrogate"; }
                }
            }

            Match qf1 = Model.Matches.Where(m => m.title == "Quarterfinal 1-1").FirstOrDefault();
            List<Team> qf1red = qf1.teams.Where(t => t.station.StartsWith("Red")).ToList();
            List<Team> qf1blue = qf1.teams.Where(t => t.station.StartsWith("Blue")).ToList();
            Match qf2 = Model.Matches.Where(m => m.title == "Quarterfinal 2-1").FirstOrDefault();
            List<Team> qf2red = qf2.teams.Where(t => t.station.StartsWith("Red")).ToList();
            List<Team> qf2blue = qf2.teams.Where(t => t.station.StartsWith("Blue")).ToList();
            Match qf3 = Model.Matches.Where(m => m.title == "Quarterfinal 3-1").FirstOrDefault();
            List<Team> qf3red = qf3.teams.Where(t => t.station.StartsWith("Red")).ToList();
            List<Team> qf3blue = qf3.teams.Where(t => t.station.StartsWith("Blue")).ToList();
            Match qf4 = Model.Matches.Where(m => m.title == "Quarterfinal 4-1").FirstOrDefault();
            List<Team> qf4red = qf4.teams.Where(t => t.station.StartsWith("Red")).ToList();
            List<Team> qf4blue = qf4.teams.Where(t => t.station.StartsWith("Blue")).ToList();

            Match sf1 = Model.Matches.Where(m => m.title == "Semifinal 1-1").FirstOrDefault();
            List<Team> sf1red = sf1.teams.Where(t => t.station.StartsWith("Red")).ToList();
            List<Team> sf1blue = sf1.teams.Where(t => t.station.StartsWith("Blue")).ToList();
            Match sf2 = Model.Matches.Where(m => m.title == "Semifinal 2-1").FirstOrDefault();
            List<Team> sf2red = sf2.teams.Where(t => t.station.StartsWith("Red")).ToList();
            List<Team> sf2blue = sf2.teams.Where(t => t.station.StartsWith("Blue")).ToList();

            Match f = Model.Matches.Where(m => m.title == "Final 1").FirstOrDefault();
            List<Team> fred = f.teams.Where(t => t.station.StartsWith("Red")).ToList();
            List<Team> fblue = f.teams.Where(t => t.station.StartsWith("Blue")).ToList();
            <table style="width: 100%">
                <tr>
                    <td class="red">
                        <div class="@teamClasses[qf1red[0].teamNumber]">@qf1red[0].teamNumber</div>
                        <div class="@teamClasses[qf1red[1].teamNumber]">@qf1red[1].teamNumber</div>
                        <div class="@teamClasses[qf1red[2].teamNumber]">@qf1red[2].teamNumber</div>
                    </td>
                    <td rowspan="2" class="red">
                        <div class="@teamClasses[sf1red[0].teamNumber]">@sf1red[0].teamNumber</div>
                        <div class="@teamClasses[sf1red[1].teamNumber]">@sf1red[1].teamNumber</div>
                        <div class="@teamClasses[sf1red[2].teamNumber]">@sf1red[2].teamNumber</div>
                    </td>
                    <td rowspan="4" class="red">
                        <div class="@teamClasses[fred[0].teamNumber]">@fred[0].teamNumber</div>
                        <div class="@teamClasses[fred[1].teamNumber]">@fred[1].teamNumber</div>
                        <div class="@teamClasses[fred[2].teamNumber]">@fred[2].teamNumber</div>
                    </td>
                    <td rowspan="4" class="blue">
                        <div class="@teamClasses[fblue[0].teamNumber]">@fblue[0].teamNumber</div>
                        <div class="@teamClasses[fblue[1].teamNumber]">@fblue[1].teamNumber</div>
                        <div class="@teamClasses[fblue[2].teamNumber]">@fblue[2].teamNumber</div>
                    </td>
                    <td rowspan="2" class="red">
                        <div class="@teamClasses[sf2red[0].teamNumber]">@sf2red[0].teamNumber</div>
                        <div class="@teamClasses[sf2red[1].teamNumber]">@sf2red[1].teamNumber</div>
                        <div class="@teamClasses[sf2red[2].teamNumber]">@sf2red[2].teamNumber</div>
                    </td>
                    <td class="red">
                        <div class="@teamClasses[qf3red[0].teamNumber]">@qf3red[0].teamNumber</div>
                        <div class="@teamClasses[qf3red[1].teamNumber]">@qf3red[1].teamNumber</div>
                        <div class="@teamClasses[qf3red[2].teamNumber]">@qf3red[2].teamNumber</div>
                    </td>
                </tr>
                <tr>
                    <td class="blue">
                        <div class="@teamClasses[qf1blue[0].teamNumber]">@qf1blue[0].teamNumber</div>
                        <div class="@teamClasses[qf1blue[1].teamNumber]">@qf1blue[1].teamNumber</div>
                        <div class="@teamClasses[qf1blue[2].teamNumber]">@qf1blue[2].teamNumber</div>
                    </td>
                    <td class="blue">
                        <div class="@teamClasses[qf3blue[0].teamNumber]">@qf3blue[0].teamNumber</div>
                        <div class="@teamClasses[qf3blue[1].teamNumber]">@qf3blue[1].teamNumber</div>
                        <div class="@teamClasses[qf3blue[2].teamNumber]">@qf3blue[2].teamNumber</div>
                    </td>
                </tr>
                <br />
                <tr>
                    <td class="red">
                        <div class="@teamClasses[qf2red[0].teamNumber]">@qf2red[0].teamNumber</div>
                        <div class="@teamClasses[qf2red[1].teamNumber]">@qf2red[1].teamNumber</div>
                        <div class="@teamClasses[qf2red[2].teamNumber]">@qf2red[2].teamNumber</div>
                    </td>
                    <td rowspan="2" class="blue">
                        <div class="@teamClasses[sf1blue[0].teamNumber]">@sf1blue[0].teamNumber</div>
                        <div class="@teamClasses[sf1blue[1].teamNumber]">@sf1blue[1].teamNumber</div>
                        <div class="@teamClasses[sf1blue[2].teamNumber]">@sf1blue[2].teamNumber</div>
                    </td>
                    <td rowspan="2" class="blue">
                        <div class="@teamClasses[sf2blue[0].teamNumber]">@sf2blue[0].teamNumber</div>
                        <div class="@teamClasses[sf2blue[1].teamNumber]">@sf2blue[1].teamNumber</div>
                        <div class="@teamClasses[sf2blue[2].teamNumber]">@sf2blue[2].teamNumber</div>
                    </td>
                    <td class="red">
                        <div class="@teamClasses[qf4red[0].teamNumber]">@qf4red[0].teamNumber</div>
                        <div class="@teamClasses[qf4red[1].teamNumber]">@qf4red[1].teamNumber</div>
                        <div class="@teamClasses[qf4red[2].teamNumber]">@qf4red[2].teamNumber</div>
                    </td>
                </tr>
                <tr>
                    <td class="red">
                        <div class="@teamClasses[qf2blue[0].teamNumber]">@qf2blue[0].teamNumber</div>
                        <div class="@teamClasses[qf2blue[1].teamNumber]">@qf2blue[1].teamNumber</div>
                        <div class="@teamClasses[qf2blue[2].teamNumber]">@qf2blue[2].teamNumber</div>
                    </td>
                    <td class="blue">
                        <div class="@teamClasses[qf4blue[0].teamNumber]">@qf4blue[0].teamNumber</div>
                        <div class="@teamClasses[qf4blue[1].teamNumber]">@qf4blue[1].teamNumber</div>
                        <div class="@teamClasses[qf4blue[2].teamNumber]">@qf4blue[2].teamNumber</div>
                    </td>
                </tr>
            </table>
        }
    }
</div>